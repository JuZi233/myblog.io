{"pages":[{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Hello d3j","text":"Welcome to d3j! This is your very first post. Check documentation for more info. If you get any problems when using fibos, you can find the answer in troubleshooting Quick Start安装FIBOS 支持常用的 UNIX 操作系统，比如 Mac OSX，Linux 和 FreeBSD。 建议在终端直接使用下面的命令快速安装：稳定版 1$ curl -s https://fibos.io/download/installer.sh | sh 安装结束后 FIBOS 可执行文件在系统 bin 目录下，使用查看 FIBOS 版本 12345~$ which fibos/usr/local/bin/fibos~$ fibos --versionv0.27.0-dev 常用命令直接执行 FIBOS 回车，查询版本信息，如： 123456~$ fibosWelcome to fibjs 0.26.0-dev.Type '.help' for more information.&gt; console.log('hello,FIBOS!')hello,FIBOS!&gt; .info 创建 hello_fibos 文件夹 ，生成 package.json 文件配置初始化： 12$ cd hello_fibos$ fibos --init 或者 npm init 安装包 1$ fibos --install fibos.js 或者 npm install fibos.js 升级重新执行安装命令会自动覆盖原有的 fibos 可执行文件，然后重启一下 fibos 服务即可完成升级。 卸载直接删除 /usr/local/bin/ 下的 fibos 这个可执行文件即可。 1$ sudo rm /usr/local/bin/fibos","link":"/2019/10/29/Hello-fibjs/"},{"title":"SystemContract","text":"newaccount 创建合约账户 参数 name type description creator string 创建者的账户名 name string 被创建者的账户名 owner string 被创建者账户 owner 权限公钥 active string 被创建者 active 权限公钥 示例1234567891011121314151617181920const FIBOS = require('fibos.js');const fibos_client = FIBOS({ // fibos 测试网 chainId chainId: '68cee14f598d88d340b50940b6ddfba28c444b46cd5f33201ace82c78896793a', keyProvider: 'PRIVATE_KEY', // 你的私钥 httpEndpoint: 'http://api.testnet.fo',});let ctx = fibos_client.contractSync('eosio');var r = ctx.newaccountSync({ creator:'eosio', name:'NEW_ACCOUNT_NAME', owner:'PUBLIC_KEY_FOR_OWNER_PERMISSION', active:'PUBLIC_KEY_FOR_ACTIVE_PERMISSION'},{ authorization: 'ACCOUNT_FOR_PRIVATE_KEY' // 私钥对应的账号});console.log(r); buyrambytes 创建者调用该方法为被创建者购买内存来存放新账户的信息 参数 name type description payer string 创建者的账户名 receiver string 被创建者的账户名 bytes uint32 购买的内存大小（字节） 示例12345678910111213141516171819const FIBOS = require('fibos.js');const fibos_client = FIBOS({ // fibos 测试网 chainId chainId: '68cee14f598d88d340b50940b6ddfba28c444b46cd5f33201ace82c78896793a', keyProvider: 'PRIVATE_KEY', // 你的私钥 httpEndpoint: 'http://api.testnet.fo',});let ctx = fibos_client.contractSync('eosio');var r = ctx.buyrambytesSync({ payer: 'ACCOUNT_OF_PAYER', receiver: 'ACCOUNT_OF_RECEIVER', bytes: 4096},{ authorization: 'ACCOUNT_FOR_PRIVATE_KEY' // 私钥对应的账号});console.log(r); delegatebw 抵押通证获取 cpu 和带宽资源 参数 name type description from string 资源抵押者的账户名 receiver string 资源接受者的账户名 stake_net_quantity string 抵押者为接受者抵押 FO 获取 NET stake_cpu_quantity string 抵押者为接受者抵押 FO 获取 CPU transfer bool 代表抵押资源同时是否将对应通证转账给接受者 示例123456789101112131415161718192021const FIBOS = require('fibos.js');const fibos_client = FIBOS({ // fibos 测试网 chainId chainId: '68cee14f598d88d340b50940b6ddfba28c444b46cd5f33201ace82c78896793a', keyProvider: 'PRIVATE_KEY', // 你的私钥 httpEndpoint: 'http://api.testnet.fo',});let ctx = fibos_client.contractSync('eosio');var r = ctx.delegatebwSync({ from: 'ACCOUNT_OF_MORTGAGOR', receiver: 'ACCOUNT_OF_RECEIVER', stake_net_quantity: '3193.0000 FO', stake_cpu_quantity: '30000.0000 FO', transfer: 0},{ authorization: 'ACCOUNT_FOR_PRIVATE_KEY' // 私钥对应的账号});console.log(r); claimrewards 区块生产者领取工资 参数 name type description owner string 区块生产者名称 示例1234567891011121314151617const FIBOS = require('fibos.js');const fibos_client = FIBOS({ // fibos 测试网 chainId chainId: '68cee14f598d88d340b50940b6ddfba28c444b46cd5f33201ace82c78896793a', keyProvider: 'PRIVATE_KEY', // 你的私钥 httpEndpoint: 'http://api.testnet.fo',});let ctx = fibos_client.contractSync('eosio');var r = ctx.claimrewardsSync({ owner: 'ACCOUNT_OR_OWNER'},{ authorization: 'ACCOUNT_FOR_PRIVATE_KEY' // 私钥对应的账号});console.log(r);","link":"/2019/10/29/fibos-SystemContract/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post 1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/10/28/hello-world/"}],"tags":[{"name":"-hello","slug":"hello","link":"/tags/hello/"}],"categories":[]}